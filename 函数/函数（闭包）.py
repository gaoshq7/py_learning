#### 函数（闭包） ####

# !/usr/bin/env python3
# -*- coding: utf-8 -*-

# 1. 函数的返回值可以是一个函数元组，里面的元素叫做‘闭包函数’。
# 2. 闭包函数可以访问其外部函数的变量，而且并不会因外部函数结束而重置该变量，该变量会伴随闭包函数的整个生命周期。
# 3. 如果有若干个闭包函数使用到了同一个外部函数变量，那一个闭包函数修改该变量后，其它函数访问该变量会得到修改后的值。
# 4. 如果想要在闭包函数里访问到外部函数变量直接使用即可；如果想要修改该变量，则需要声明关键字‘nonlocal’。
# 5. ‘global’关键字可以操作全局变量，且不存在的时候会新建此变量；‘nonlocal’关键字只可以操作外部函数变量，不可以新建，这样会导致外部函数的不稳定。
_A_ = 500


class J:

    def js(s):
        def m1(x):
            nonlocal s
            r = x + s
            s += 1  # 会影响其他闭包函数
            return r

        def m2(x):
            global _A_
            _A_ = '变成大粪'
            global _B_
            _B_ = '新全局变量'
            # nonlocal a
            # a = '大西瓜' # 会报错，无法新建外部函数局部变量，没有意义。
            return x * s

        return m1, m2


f1, f2 = J.js(2)
print(f1(10), f2(10), f1(10), f2(10), sep='\n')
print(_A_)
print(_B_)